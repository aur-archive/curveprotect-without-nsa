## arg 1:  the new package version
pre_install() {
  # do something here
  exit 0
}

## arg 1:  the new package version
post_install() {
  curveprotectbase=/opt/curveprotect
  grp=cpgrp
  log=cplog
  usr=cpusr
  cfg=cpcfg
  dwr=cpdwr
  dwl=cpdwl

  if ! grep -q "^${grp}:" /etc/group; then
    groupadd --system "${grp}"
  fi

  for x in "${log}" "${usr}" "${cfg}"; do
    if ! grep -q "^${x}:" /etc/passwd; then
      useradd --system --home /nonexistent -g "${grp}" -c "Curveprotect ${x} user" "${x}"
    fi
  done

  for x in "${dwr}" "${dwl}"; do
    if ! grep -q "^${x}:" /etc/passwd; then
      useradd --system --shell /bin/sh --create-home --home "/opt/curveprotect/home/${x}" -g "${grp}" -c "Curveprotect user for downloading zones" "${x}"
    fi
  done


  #get key
  su -c 'gpg --import /opt/curveprotect/share/gnupgkey-20E3C425-valid-to-20130206.pub' "${dwr}" || :
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! "
  echo "!!!!! check please fingerprint !!! "
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! "

  #XXX
  if [ ! -e /service ]; then
    if [ -e /etc/service ]; then
      ln -s /etc/service /service
    fi
  fi


  #X
  (
    cd /opt/curveprotect/service
    ls -1  |\
    while read d
    do
        (
          cd "${d}"
          envuidgid "${cfg}" /opt/curveprotect/bin/trycreatesupervise
        )
        ldir="/opt/curveprotect/log/${d}"
        [ -d "${ldir}" ] || mkdir "${ldir}"
        chown "${log}" "${ldir}"
        chgrp "${grp}" "${ldir}"
        chmod 750 "${ldir}"
        [ -h "/service/curveprotect_${d}" ] || ln -s "/opt/curveprotect/service/${d}" "/service/curveprotect_${d}"
    done
  )

  # perms
  chown "${log}" /opt/curveprotect/log
  chgrp "${grp}" /opt/curveprotect/log
  chown -R "${dwl}" /opt/curveprotect/var/dnslocal
  chown -R "${dwr}" /opt/curveprotect/var/dnsroot
  chown "${usr}" /opt/curveprotect/etc/dnscache/root/dump
  chgrp "${grp}" /opt/curveprotect/etc/dnscache/root/dump
  mkdir -p ${curveprotectbase}/.keys || :
  chown -R "${usr}" /opt/curveprotect/.keys
  chgrp -R "${grp}" /opt/curveprotect/.keys

  # cfg perms
  find /opt/curveprotect/etc -type d -name 'env' -exec chown -R "${cfg}" '{}' ';'
  find /opt/curveprotect/etc/vpn* -type d -name 'root' -exec chown -R "${cfg}" '{}' ';'
  chown -R "${cfg}" /opt/curveprotect/etc/dnscache/root/servers
  chown -R "${cfg}" /opt/curveprotect/etc/dnslocal/root
  chown -R "${cfg}" /opt/curveprotect/etc/dnsroot/root
  chown -R "${cfg}" /opt/curveprotect/etc/tmp
  #X


}

## arg 1:  the new package version
## arg 2:  the old package version
pre_upgrade() {
  # do something here
  exit 0
}

## arg 1:  the new package version
## arg 2:  the old package version
post_upgrade() {
  grp=cpgrp
  log=cplog
  usr=cpusr
  cfg=cpcfg
  dwr=cpdwr
  dwl=cpdwl

  chown -R "${cfg}" /opt/curveprotect/etc/tmp
  find /opt/curveprotect/etc/vpn* -type d -name 'root' -exec chown -R "${cfg}" '{}' ';'

  for i in `ls /opt/curveprotect/service 2>/dev/null`; do
      cd "/service/curveprotect_${i}"
      svc -k . log
      echo "restarting: /service/curveprotect_${i}"
  done

}

## arg 1:  the old package version
pre_remove() {
  #stop services
  for i in `ls /opt/curveprotect/service 2>/dev/null`; do
      cd "/service/curveprotect_${i}"
      rm "/service/curveprotect_${i}"
      svc -dx . log
      echo "stopping: /service/curveprotect_${i}"
  done
}

## arg 1:  the old package version
post_remove() {
  grp=cpgrp
  log=cplog
  usr=cpusr
  dwr=cpdwr
  dwl=cpdwl
  cfg=cpcfg

  rm -rf /var/log/curveprotect
  rm -rf /etc/curveprotect
  userdel -f "${usr}" || :
  userdel -f "${log}" || :
  userdel -f "${dwr}" || :
  userdel -f "${dwl}" || :
  userdel -f "${cfg}" || :
  groupdel "${grp}" || :
  ( 
    cd /opt/curveprotect
    rm -rf home html lib log service tmp var www etc
  )
}
